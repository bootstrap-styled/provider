image: kopaxgroup/node10-jdk8-flyway4-sonarscanner2-docker17-debian

before_script:
  - npx -p rollup-umd-scripts scripts-ci before-script

stages:
  - build
  - test
  - release
  - deploy

# Job: Build
build:
  stage: build
  script:
    - npx -p rollup-umd-scripts scripts-ci build
  cache:
    key: ${CI_BUILD_REF_NAME}
    paths:
      - node_modules/
  artifacts:
    when: on_success
    name: "${CI_PROJECT_PATH}-${CI_PIPELINE_ID}-${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 1 hour
    paths:
      - .
  only:
    - dev
    - tags
    - master
  tags:
    - docker

# Job: Test
test:
  stage: test
  coverage: '/All files[^|]*\|\s*[\d.]*\s*\|\s*[\d.]*\s*\|\s*[\d.]*\s*\|\s*([\d.]*)\s*\|\s*/'
  script:
    - npx -p rollup-umd-scripts scripts-ci test
  dependencies:
    - build
  only:
    - dev
    - tags
    - master
  tags:
    - docker

.node:8:
  image: node:8
  stage: test
  dependencies:
    - build
  script:
    - npm test
  only:
    - dev
    - master
  tags:
    - docker

.node:9:
  image: node:9
  stage: test
  dependencies:
    - build
  script:
    - npx -p rollup-umd-scripts scripts-ci test
  only:
    - dev
    - master
  tags:
    - docker

# Job: Release
release:
  stage: release
  script:
    # if it's transitive, then it means we are publishing to public
    - '[ "$(npx rollup-umd-scripts publish status)" = "transitive" ] && exit 0'
    - npx semantic-release
    # Will trigger the doc build using the newly created tag
    - '[[ -f ~/release_version ]] && RELEASE_VERSION=v$(cat ~/release_version) || exit 0'
    - 'JSON_RES=$(curl -f -sS -X POST -H "PRIVATE-TOKEN: ${GITLAB_TOKEN:-$GL_TOKEN}" -F description=ci-auto-created https://module.kopaxgroup.com/api/v4/projects/${CI_PROJECT_ID}/triggers)'
    - TRIGGER_TOKEN=$(echo $JSON_RES | jq -r '.token') && TRIGGER_ID=$(echo $JSON_RES | jq -r '.id')
    - sleep 3s
    - 'curl -f -o /dev/null -S -X POST -F token=${TRIGGER_TOKEN} -F ref=${RELEASE_VERSION} -F "variables[NPM_TOKEN]=${NPM_TOKEN}" -F "variables[NPM_TOKEN_KOPAXGROUP]=${NPM_TOKEN_KOPAXGROUP}" https://module.kopaxgroup.com/api/v4/projects/${CI_PROJECT_ID}/trigger/pipeline'
    - 'curl -f -S -X DELETE -H "PRIVATE-TOKEN: ${GITLAB_TOKEN:-$GL_TOKEN}" "https://module.kopaxgroup.com/api/v4/projects/${CI_PROJECT_ID}/triggers/${TRIGGER_ID}"'
  dependencies:
    - build
  only:
    - master
  tags:
    - docker

# Pages
pages:
  stage: deploy
  script:
    - npm install
    # Replace variables
    - '[[ "$DECLINATION_ID" = "cli" ]] && npx rollup-umd-scripts doc cli-help'
    - npx rollup-umd-scripts doc variable PACKAGE_NAME=${PACKAGE_NAME}
    - npx rollup-umd-scripts doc variable PACKAGE_PEERS="$(npx rollup-umd-scripts peer npm-install-cmd)"
    - npx rollup-umd-scripts doc variable PACKAGE_VERSION=${PACKAGE_VERSION}
    - npx rollup-umd-scripts doc variable NODE_VERSION=${NODE_VERSION}
    - npx rollup-umd-scripts doc variable NPM_VERSION=${NPM_VERSION}
    - npx rollup-umd-scripts doc variable CI_REPOSITORY_URL=${REPOSITORY_SSH_URL}
    - npx rollup-umd-scripts doc variable CI_PROJECT_URL=${CI_PROJECT_URL}
    - npx rollup-umd-scripts doc variable CI_PROJECT_NAMESPACE=${CI_PROJECT_NAMESPACE}
    - npx rollup-umd-scripts doc variable CI_PROJECT_NAME=${CI_PROJECT_NAME}
    - npx rollup-umd-scripts doc variable IMG_SHIELD_PUBLISHING=$(npx rollup-umd-scripts publish status --badge)
    - npm run styleguide:build
  artifacts:
    paths:
    - public
  only:
    - tags
  tags:
    - docker
